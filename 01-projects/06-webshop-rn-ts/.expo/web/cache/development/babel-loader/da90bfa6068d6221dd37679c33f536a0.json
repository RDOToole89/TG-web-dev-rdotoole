{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useState } from 'react';\nimport { useSelector } from \"../hooks/useTypedSelector\";\nimport { useActions } from \"../hooks/useActions\";\nimport { fontSizes } from \"../constants/sizes\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Item = function Item(_ref) {\n  var title = _ref.title;\n  return _jsx(View, {\n    style: styles.item,\n    children: _jsx(Text, {\n      style: styles.title,\n      children: title\n    })\n  });\n};\n\nexport var Home = function Home() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      term = _useState2[0],\n      setTerm = _useState2[1];\n\n  var _useActions = useActions(),\n      searchRepositories = _useActions.searchRepositories;\n\n  var _useSelector = useSelector(function (state) {\n    return state.repositories;\n  }),\n      data = _useSelector.data,\n      error = _useSelector.error,\n      loading = _useSelector.loading;\n\n  var dataWithId = data == null ? void 0 : data.map(function (x, i) {\n    return {\n      id: i,\n      title: x\n    };\n  });\n  console.log('dataWITHID', dataWithId);\n\n  var onPress = function onPress() {\n    searchRepositories(term);\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(Item, {\n      title: item.title\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Hello from the Home Screen\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setTerm,\n      value: term\n    }), _jsx(Button, {\n      title: \"search\",\n      onPress: onPress\n    }), error && _jsx(\"h3\", {\n      children: error\n    }), loading && _jsx(ActivityIndicator, {\n      size: \"small\",\n      color: \"000\"\n    }), !error && !loading && _jsx(FlatList, {\n      data: dataWithId,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  },\n  item: {\n    backgroundColor: '#f9c2ff',\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: fontSizes.sm\n  }\n});","map":{"version":3,"sources":["/home/roibin/Desktop/TechGrounds/01-projects/06-webshop-rn-ts/src/screens/Home.tsx"],"names":["useState","useSelector","useActions","fontSizes","Item","title","styles","item","Home","term","setTerm","searchRepositories","state","repositories","data","error","loading","dataWithId","map","x","i","id","console","log","onPress","renderItem","container","input","StyleSheet","create","flex","height","margin","borderWidth","padding","backgroundColor","marginVertical","marginHorizontal","fontSize","sm"],"mappings":"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","sourcesContent":["import {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  Button,\n  ActivityIndicator,\n  FlatList,\n} from 'react-native';\nimport { useState } from 'react';\nimport { useSelector } from '../hooks/useTypedSelector';\nimport { useActions } from '../hooks/useActions';\nimport { fontSizes, spacing } from '../constants/sizes';\n\nconst Item = ({ title }: any) => (\n  <View style={styles.item}>\n    <Text style={styles.title}>{title}</Text>\n  </View>\n);\n\nexport const Home: React.FC = () => {\n  const [term, setTerm] = useState('');\n  const { searchRepositories } = useActions();\n  const { data, error, loading } = useSelector((state) => state.repositories);\n  const dataWithId = data?.map((x, i) => {\n    return { id: i, title: x };\n  });\n\n  console.log('dataWITHID', dataWithId);\n\n  const onPress = () => {\n    // NOTE 1 at bottom\n    searchRepositories(term);\n  };\n\n  const renderItem = ({ item }: any) => <Item title={item.title} />;\n\n  return (\n    <View style={styles.container}>\n      <Text>Hello from the Home Screen</Text>\n      <TextInput style={styles.input} onChangeText={setTerm} value={term} />\n      <Button title='search' onPress={onPress} />\n      {error && <h3>{error}</h3>}\n      {loading && <ActivityIndicator size='small' color='000' />}\n      {!error && !loading && (\n        <FlatList\n          data={dataWithId}\n          renderItem={renderItem}\n          keyExtractor={(item): any => item.id}\n        />\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  item: {\n    backgroundColor: '#f9c2ff',\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: fontSizes.sm,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}